{
  "name": "intlayer-vs-code-extension",
  "displayName": "Intlayer",
  "description": "Intlayer official VSCode extension. Helps you navigate to content files using useIntlayer keys. It also provides commands, as to create dictionary files.",
  "private": false,
  "keywords": [
    "intlayer",
    "content",
    "markdown",
    "multilingual",
    "i18n",
    "internationalization",
    "vscode"
  ],
  "icon": "icon.png",
  "homepage": "https://intlayer.org",
  "bugs": {
    "url": "https://github.com/aymericzip/intlayer-vs-code-extension/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/aymericzip/intlayer-vs-code-extension.git"
  },
  "license": "MIT",
  "author": {
    "name": "Aymeric PINEAU",
    "url": "https://github.com/aymericzip"
  },
  "contributors": [
    {
      "name": "Aymeric Pineau",
      "email": "ay.pineau@gmail.com",
      "url": "https://github.com/aymericzip"
    }
  ],
  "version": "6.0.1",
  "categories": [
    "Programming Languages",
    "Formatters"
  ],
  "engines": {
    "vscode": "^1.96.0"
  },
  "publisher": "intlayer",
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "intlayer",
          "title": "Intlayer",
          "icon": "logo.svg"
        }
      ]
    },
    "views": {
      "intlayer": [
        {
          "type": "webview",
          "id": "intlayer.searchBar",
          "name": "Search"
        },
        {
          "id": "intlayer.dictionaries",
          "name": "Dictionaries"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "extension.buildDictionaries",
          "when": "view == intlayer.dictionaries",
          "group": "navigation@0"
        },
        {
          "command": "extension.pullDictionaries",
          "when": "view == intlayer.dictionaries",
          "group": "navigation@1"
        },
        {
          "command": "extension.pushDictionaries",
          "when": "view == intlayer.dictionaries",
          "group": "navigation@2"
        },
        {
          "command": "extension.fillDictionaries",
          "when": "view == intlayer.dictionaries",
          "group": "navigation@3"
        },
        {
          "command": "intlayer.refreshDictionaries",
          "when": "view == intlayer.dictionaries",
          "group": "navigation@4"
        },
        {
          "command": "extension.testDictionaries",
          "when": "view == intlayer.dictionaries",
          "group": "navigation@5"
        },
        {
          "command": "extension.createDictionaryFile",
          "when": "view == intlayer.dictionaries",
          "group": "navigation@6"
        }
      ],
      "view/item/context": [
        {
          "command": "intlayer.fillDictionary",
          "when": "view == intlayer.dictionaries && viewItem == intlayer.file",
          "group": "inline@1"
        },
        {
          "command": "intlayer.pullDictionary",
          "when": "view == intlayer.dictionaries && viewItem == intlayer.dictionary",
          "group": "inline@2"
        },
        {
          "command": "intlayer.pushDictionary",
          "when": "view == intlayer.dictionaries && viewItem == intlayer.dictionary",
          "group": "inline@3"
        }
      ]
    },
    "commands": [
      {
        "command": "intlayer.fillDictionary",
        "title": "Intlayer: Fill Dictionary",
        "icon": "$(wand)"
      },
      {
        "command": "intlayer.pullDictionary",
        "title": "Intlayer: Pull Dictionary",
        "icon": "$(cloud-download)"
      },
      {
        "command": "intlayer.pushDictionary",
        "title": "Intlayer: Push Dictionary",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "extension.createDictionaryFile.ts",
        "title": "Intlayer: Create Dictionary File (TypeScript)",
        "icon": "$(symbol-parameter)"
      },
      {
        "command": "extension.createDictionaryFile.esm",
        "title": "Intlayer: Create Dictionary File (ESM)",
        "icon": "$(symbol-parameter)"
      },
      {
        "command": "extension.createDictionaryFile.cjs",
        "title": "Intlayer: Create Dictionary File (CommonJS)",
        "icon": "$(symbol-parameter)"
      },
      {
        "command": "extension.createDictionaryFile.json",
        "title": "Intlayer: Create Dictionary File (JSON)",
        "icon": "$(symbol-parameter)"
      },
      {
        "command": "extension.createDictionaryFile",
        "title": "Intlayer: Create Dictionary File",
        "icon": "$(new-file)"
      },
      {
        "command": "extension.buildDictionaries",
        "title": "Intlayer: Build Dictionaries",
        "icon": "$(tools)"
      },
      {
        "command": "extension.pushDictionaries",
        "title": "Intlayer: Push Dictionaries",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "extension.pullDictionaries",
        "title": "Intlayer: Pull Dictionaries",
        "icon": "$(cloud-download)"
      },
      {
        "command": "extension.fillDictionaries",
        "title": "Intlayer: Fill Dictionaries",
        "icon": "$(wand)"
      },
      {
        "command": "extension.testDictionaries",
        "title": "Intlayer: Test Dictionaries",
        "icon": "$(beaker)"
      },
      {
        "command": "intlayer.refreshDictionaries",
        "title": "Intlayer: Refresh",
        "icon": "$(refresh)"
      }
    ]
  },
  "activationEvents": [
    "onView:intlayer.searchBar",
    "onView:intlayer.dictionaries",
    "onCommand:intlayer.pullDictionary",
    "onCommand:extension.createDictionaryFile",
    "onCommand:extension.createDictionaryFile.ts",
    "onCommand:extension.createDictionaryFile.esm",
    "onCommand:extension.createDictionaryFile.cjs",
    "onCommand:extension.createDictionaryFile.json",
    "onCommand:extension.buildDictionaries",
    "onCommand:extension.pushDictionaries",
    "onCommand:extension.pullDictionaries",
    "onCommand:extension.fillDictionaries",
    "onCommand:extension.testDictionaries",
    "onLanguage:javascript",
    "onLanguage:javascriptreact",
    "onLanguage:typescript",
    "onLanguage:typescriptreact"
  ],
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "vscode:package": "vsce package",
    "vscode:publish": "vsce publish",
    "vscode:login": "vsce login intlayer",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.96.0",
    "@typescript-eslint/eslint-plugin": "^8.25.0",
    "@typescript-eslint/parser": "^8.25.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.21.0",
    "typescript": "^5.7.3"
  },
  "dependencies": {
    "fuse.js": "^7.1.0",
    "intlayer": "^6.0.1",
    "@intlayer/chokidar": "^6.0.1",
    "@intlayer/cli": "^6.0.1",
    "@intlayer/api": "^6.0.1",
    "@intlayer/config": "^6.0.1"
  }
}
